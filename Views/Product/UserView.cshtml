<nav aria-label='breadcrumb'>
    <ol class='breadcrumb breadcrumb-arrow'>

        <li class='breadcrumb-item active' aria-current='page'>
            As User you can select the product below</li>
    </ol>
</nav>
<div id='app1' v-cloak>

    <v-app>
        <v-main>
            <v-data-table :headers='headers' :items='products' class='elevation-1' />
            <template v-slot:item.actions='{item}'>
                <v-btn class="white--text" color="blue darken-1" @@click="add(item)">
                    <v-icon>
                        mdi-plus
                    </v-icon>

                </v-btn>
            </template>

            </v-data-table>
            <hr>


            <nav aria-label='breadcrumb'>
                <ol class='breadcrumb breadcrumb-arrow'>

                    <li class='breadcrumb-item active' aria-current='page'>Your Selection</li>
                </ol>
            </nav>

            <v-data-table :headers='headers2' :items='selection' class='elevation-1' />
            </v-data-table>
        </v-main>
    </v-app>
</div>
@section scripts{
<script>
    var app;
    var component = {
        vuetify: new Vuetify(),
        el: '#app1',
        data: {
            products: {} //this is the empty object that reserve for coming data from user
            ,
            selection: [] //this will be the user's selection 
                ,
            list1: [] //just in case 
                ,
            headers: [{
                        text: 'Product Name',
                        value: 'name',
                        align: 'center',
                        sortable: true
                    },
                    {
                        text: 'Quantity',
                        value: 'qty',
                        align: 'center',
                        sortable: true
                    },
                    {
                        text: 'Price',
                        value: 'price',
                        align: 'center',
                        sortable: true
                    },
                    {
                        text: 'Material',
                        value: 'typeName',
                        align: 'center',
                        sortable: true
                    },
                    {
                        text: 'Select',
                        value: 'actions',
                        align: 'center'
                    },

                ] //end of header array
                ,
            headers2: [{
                        text: 'Product Name',
                        value: 'name',
                        align: 'center',
                        sortable: true
                    },
                    {
                        text: 'Quantity',
                        value: 'qty',
                        align: 'center',
                        sortable: true
                    },
                    {
                        text: 'Price',
                        value: 'price',
                        align: 'center',
                        sortable: true
                    },

                ] //end of header array
                ,
        } //end of data
        ,
        created() {
            this.products = @Html.Raw(Json.Serialize(@ViewBag.products));
        },
        methods: {
            // I want to make the user edit the database only for the qty
            // User click select and then the qty in the db will update by -1 from total
            // then add that product into the user database and increase the qty number by one      
            edit_byUser() {
                var url = "/product/edit_byUser/" + item.productID;
                var param = this.products;
                $.post(url, param)
                    .done(res => {

                        if (res.error == -1) {
                            window.location = '/product/index';
                        } else {
                            alert(res.exception);
                        }
                    });
            } //end of function
            ,
            add(item) {
                this.selection.push(item);
            },

        },
        computed: {

        }
    };
    app = new Vue(component);
</script>

}
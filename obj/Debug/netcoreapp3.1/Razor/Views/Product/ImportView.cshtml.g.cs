#pragma checksum "C:\Users\wspal\Desktop\FINAL_6013532\Views\Product\ImportView.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8e25afc0fecbd80d82c626a34106d976215860a4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Product_ImportView), @"mvc.1.0.view", @"/Views/Product/ImportView.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\wspal\Desktop\FINAL_6013532\Views\_ViewImports.cshtml"
using FINAL_6013532;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\wspal\Desktop\FINAL_6013532\Views\_ViewImports.cshtml"
using FINAL_6013532.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8e25afc0fecbd80d82c626a34106d976215860a4", @"/Views/Product/ImportView.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"dd4ffb7483c43284bcf94cd8810437fd9513cdf3", @"/Views/_ViewImports.cshtml")]
    public class Views_Product_ImportView : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<nav aria-label='breadcrumb'>
    <ol class='breadcrumb breadcrumb-arrow'>
        <li class='breadcrumb-item'><a href='/product/index'>Back</a></li>
        <li class='breadcrumb-item active' aria-current='page'>Importing New Arrival product using Excel, for manager</li>
    </ol>
</nav>
<div id='app1' v-cloak>

    <v-app>
        <v-main>
            <v-file-input
            label=""product file""
            v-model=""file1""
            >
            </v-file-input>
            <v-btn
            color=""blue darken-3"" class=""white--text""
            ");
            WriteLiteral("@click=\"upload\"\r\n            >\r\n                import new product file\r\n                <v-icon>mdi-import</v-icon>\r\n            </v-btn>\r\n        </v-main>\r\n    </v-app>\r\n</div>\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
        var app;
            var component = {
                vuetify: new Vuetify()
                ,
                el:'#app1'
                ,
                data:{

                file1:null
                ,
                   list1:[]
                }
                ,
                created(){
                  
                }
                ,
                methods:{
                    upload(){
                        //to get the attach file in the v-input-file
                        //and then make a request to the server
                        //using ajax is more boarder
                        var data = new FormData();//this datatype is to submit the file to server
                        //append is the function that take (<xx>,<NameFromVuejsData>)
                        // xx = the name that will be encrypted and send it to server
                        //it must match because it will be extracted later on in the server
              ");
                WriteLiteral(@"          data.append(""file1"",this.file1);
                        console.log(data);
                        //make ajax
                        var option = {
                            type: ""POST"",
                            enctype: 'multipart/form-data',
                            url: ""/product/import1"",// controller/functionname
                            data: data,//data this one comes fromt the data section of vuejs
                            processData: false,
                            contentType: false,
                            cache: false,
                            timeout: 30000,
                            success: (res) => {
                                console.log(res);
                                window.location = '/product/index'
                            },
                            error: (error) => {
                                console.log(error);
                            },
                        };//end of option object
           ");
                WriteLiteral(@"             //each of this attribute of this object is the parameter
                        //that will identify how this request in going to look like
                        //then we throw this object into the ajax() function
                        $.ajax(option);
                    }//end of upload function
                    ,
                }//end of method
                ,
                 computed:{

                 }
            };
            app = new Vue(component);


    </script>

");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591

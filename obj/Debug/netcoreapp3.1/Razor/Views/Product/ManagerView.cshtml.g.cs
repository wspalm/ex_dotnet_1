#pragma checksum "C:\Users\wspal\Desktop\FINAL_6013532\Views\Product\ManagerView.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b7d10aa1fbcc15ac42bab0fad2ca101a8f972775"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Product_ManagerView), @"mvc.1.0.view", @"/Views/Product/ManagerView.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\wspal\Desktop\FINAL_6013532\Views\_ViewImports.cshtml"
using FINAL_6013532;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\wspal\Desktop\FINAL_6013532\Views\_ViewImports.cshtml"
using FINAL_6013532.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b7d10aa1fbcc15ac42bab0fad2ca101a8f972775", @"/Views/Product/ManagerView.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"dd4ffb7483c43284bcf94cd8810437fd9513cdf3", @"/Views/_ViewImports.cshtml")]
    public class Views_Product_ManagerView : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<nav aria-label='breadcrumb'>
    <ol class='breadcrumb breadcrumb-arrow'>

        <li class='breadcrumb-item active' aria-current='page'>Hello!! Manager</li>
    </ol>
</nav>
<div id='app1' v-cloak>

    <v-app>
        <v-main>
            <v-btn ");
            WriteLiteral("@click=\'add_item\'>\r\n                Add Product\r\n                <v-icon>mdi-plus</v-icon>\r\n            </v-btn>\r\n\r\n            <v-btn ");
            WriteLiteral(@"@click='import_item'>
                Import Excel
                <v-icon>mdi-import</v-icon>
            </v-btn>

            <v-data-table :headers='headers' :items='products' class='elevation-1' />
            <template v-slot:item.actions='{item}'>
                <v-btn class=""white--text"" color=""blue darken-1"" ");
            WriteLiteral(@"@click=""edit_item(item)"">
                    <v-icon>
                        mdi-pencil
                    </v-icon>

                </v-btn>
            </template>
            <template v-slot:item.deletes='{item}'>
                <v-btn class=""white--text"" color=""red darken-2"" ");
            WriteLiteral("@click=\"delete_item(item)\">\r\n                    <v-icon>mdi-delete</v-icon>\r\n                </v-btn>\r\n            </template>\r\n\r\n            </v-data-table>\r\n        </v-main>\r\n    </v-app>\r\n</div>\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
<script>
    var app;
    var component = {
        vuetify: new Vuetify(),
        el: '#app1',
        data: {
            products: [] //this is the empty array that reserve for coming data from user
                ,
            headers: [
                //the value in the header must be matched with the any attributes in the json object
                //viewbag is the object that has sub attribute

                {
                    text: 'Product Name',
                    value: 'name',
                    align: 'center',
                    sortable: true
                },
                {
                    text: 'Quantity',
                    value: 'qty',
                    align: 'center',
                    sortable: true
                },
                {
                    text: 'Price',
                    value: 'price',
                    align: 'center',
                    sortable: true
                },
                {
                 ");
                WriteLiteral(@"   text: 'Material',
                    value: 'typeName',
                    align: 'center',
                    sortable: true
                },
                {
                    text: 'Update',
                    value: 'actions',
                    align: 'center'
                },
                {
                    text: 'Delete',
                    value: 'deletes',
                    align: 'center'
                },

            ] //end of header array               
        } //end of data
        ,
        created() {
            //serialize function will take the list of object(viewbag) 
            //and convert it into Json format
            //then raw will convert that Json format into memory

            //parse
            this.products = ");
#nullable restore
#line 97 "C:\Users\wspal\Desktop\FINAL_6013532\Views\Product\ManagerView.cshtml"
                       Write(Html.Raw(Json.Serialize(@ViewBag.products)));

#line default
#line hidden
#nullable disable
                WriteLiteral(@";
            console.log(this.products);
        },
        methods: {
            //some of this function will navigate to the site that help you to 
            add_item() {
                window.location = '/product/add';
            } //end of additem function
            ,
            edit_item(item) {
                //this item will be the input parameter of this function
                //to receive the specified item and walk into factory 
                //to alter it
                window.location = '/product/edit/' + item.productID;

                //this productID has to be the same name with the model 
                //to make it link and be the same variable 
                //when it is attached across the server
            } //end of edititem function
            ,
            delete_item(item) {
                //this url has to be the same as the controller
                //Post: product/delete/productID

                //confirm function will return boolean");
                WriteLiteral(@"
                //true false can be use in if as usual
                if (confirm(""Do you want to delete"")) {

                    var url = '/product/delete/' + item.productID;
                    var param = this.prod;
                    $.post(url, param)
                        .done(res => {

                            if (res.error == -1) {
                                window.location = '/product/index';
                            } else {
                                alert(res.exception);
                            }
                        });
                } //end of if
            } //end of function
            ,
            import_item(){
                window.location = ""/product/importview"";
            }//end of import function
            ,

        },
        computed: {

        }
    };
    app = new Vue(component);
</script>

");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
